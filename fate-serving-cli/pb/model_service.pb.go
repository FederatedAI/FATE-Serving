// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.17.3
// source: model_service.proto

package pb

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Party struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PartyId []string `protobuf:"bytes,1,rep,name=partyId,proto3" json:"partyId,omitempty"`
}

func (x *Party) Reset() {
	*x = Party{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Party) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Party) ProtoMessage() {}

func (x *Party) ProtoReflect() protoreflect.Message {
	mi := &file_model_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Party.ProtoReflect.Descriptor instead.
func (*Party) Descriptor() ([]byte, []int) {
	return file_model_service_proto_rawDescGZIP(), []int{0}
}

func (x *Party) GetPartyId() []string {
	if x != nil {
		return x.PartyId
	}
	return nil
}

type LocalInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Role    string `protobuf:"bytes,1,opt,name=role,proto3" json:"role,omitempty"`
	PartyId string `protobuf:"bytes,2,opt,name=partyId,proto3" json:"partyId,omitempty"`
}

func (x *LocalInfo) Reset() {
	*x = LocalInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LocalInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LocalInfo) ProtoMessage() {}

func (x *LocalInfo) ProtoReflect() protoreflect.Message {
	mi := &file_model_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LocalInfo.ProtoReflect.Descriptor instead.
func (*LocalInfo) Descriptor() ([]byte, []int) {
	return file_model_service_proto_rawDescGZIP(), []int{1}
}

func (x *LocalInfo) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

func (x *LocalInfo) GetPartyId() string {
	if x != nil {
		return x.PartyId
	}
	return ""
}

type ModelInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TableName string `protobuf:"bytes,1,opt,name=tableName,proto3" json:"tableName,omitempty"`
	Namespace string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
}

func (x *ModelInfo) Reset() {
	*x = ModelInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModelInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModelInfo) ProtoMessage() {}

func (x *ModelInfo) ProtoReflect() protoreflect.Message {
	mi := &file_model_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModelInfo.ProtoReflect.Descriptor instead.
func (*ModelInfo) Descriptor() ([]byte, []int) {
	return file_model_service_proto_rawDescGZIP(), []int{2}
}

func (x *ModelInfo) GetTableName() string {
	if x != nil {
		return x.TableName
	}
	return ""
}

func (x *ModelInfo) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

type RoleModelInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoleModelInfo map[string]*ModelInfo `protobuf:"bytes,1,rep,name=roleModelInfo,proto3" json:"roleModelInfo,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *RoleModelInfo) Reset() {
	*x = RoleModelInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleModelInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleModelInfo) ProtoMessage() {}

func (x *RoleModelInfo) ProtoReflect() protoreflect.Message {
	mi := &file_model_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleModelInfo.ProtoReflect.Descriptor instead.
func (*RoleModelInfo) Descriptor() ([]byte, []int) {
	return file_model_service_proto_rawDescGZIP(), []int{3}
}

func (x *RoleModelInfo) GetRoleModelInfo() map[string]*ModelInfo {
	if x != nil {
		return x.RoleModelInfo
	}
	return nil
}

type UnloadRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TableName string `protobuf:"bytes,1,opt,name=tableName,proto3" json:"tableName,omitempty"`
	Namespace string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
}

func (x *UnloadRequest) Reset() {
	*x = UnloadRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnloadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnloadRequest) ProtoMessage() {}

func (x *UnloadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_model_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnloadRequest.ProtoReflect.Descriptor instead.
func (*UnloadRequest) Descriptor() ([]byte, []int) {
	return file_model_service_proto_rawDescGZIP(), []int{4}
}

func (x *UnloadRequest) GetTableName() string {
	if x != nil {
		return x.TableName
	}
	return ""
}

func (x *UnloadRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

type UnloadResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StatusCode int32  `protobuf:"varint,1,opt,name=statusCode,proto3" json:"statusCode,omitempty"`
	Message    string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *UnloadResponse) Reset() {
	*x = UnloadResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnloadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnloadResponse) ProtoMessage() {}

func (x *UnloadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_model_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnloadResponse.ProtoReflect.Descriptor instead.
func (*UnloadResponse) Descriptor() ([]byte, []int) {
	return file_model_service_proto_rawDescGZIP(), []int{5}
}

func (x *UnloadResponse) GetStatusCode() int32 {
	if x != nil {
		return x.StatusCode
	}
	return 0
}

func (x *UnloadResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type UnbindRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServiceIds []string `protobuf:"bytes,1,rep,name=serviceIds,proto3" json:"serviceIds,omitempty"`
	TableName  string   `protobuf:"bytes,2,opt,name=tableName,proto3" json:"tableName,omitempty"`
	Namespace  string   `protobuf:"bytes,3,opt,name=namespace,proto3" json:"namespace,omitempty"`
}

func (x *UnbindRequest) Reset() {
	*x = UnbindRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnbindRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnbindRequest) ProtoMessage() {}

func (x *UnbindRequest) ProtoReflect() protoreflect.Message {
	mi := &file_model_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnbindRequest.ProtoReflect.Descriptor instead.
func (*UnbindRequest) Descriptor() ([]byte, []int) {
	return file_model_service_proto_rawDescGZIP(), []int{6}
}

func (x *UnbindRequest) GetServiceIds() []string {
	if x != nil {
		return x.ServiceIds
	}
	return nil
}

func (x *UnbindRequest) GetTableName() string {
	if x != nil {
		return x.TableName
	}
	return ""
}

func (x *UnbindRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

type UnbindResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StatusCode int32  `protobuf:"varint,1,opt,name=statusCode,proto3" json:"statusCode,omitempty"`
	Message    string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *UnbindResponse) Reset() {
	*x = UnbindResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnbindResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnbindResponse) ProtoMessage() {}

func (x *UnbindResponse) ProtoReflect() protoreflect.Message {
	mi := &file_model_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnbindResponse.ProtoReflect.Descriptor instead.
func (*UnbindResponse) Descriptor() ([]byte, []int) {
	return file_model_service_proto_rawDescGZIP(), []int{7}
}

func (x *UnbindResponse) GetStatusCode() int32 {
	if x != nil {
		return x.StatusCode
	}
	return 0
}

func (x *UnbindResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type QueryModelRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServiceId  string `protobuf:"bytes,1,opt,name=serviceId,proto3" json:"serviceId,omitempty"`
	TableName  string `protobuf:"bytes,2,opt,name=tableName,proto3" json:"tableName,omitempty"`
	Namespace  string `protobuf:"bytes,3,opt,name=namespace,proto3" json:"namespace,omitempty"`
	BeginIndex int32  `protobuf:"varint,4,opt,name=beginIndex,proto3" json:"beginIndex,omitempty"`
	EndIndex   int32  `protobuf:"varint,5,opt,name=endIndex,proto3" json:"endIndex,omitempty"`
	QueryType  int32  `protobuf:"varint,6,opt,name=queryType,proto3" json:"queryType,omitempty"`
}

func (x *QueryModelRequest) Reset() {
	*x = QueryModelRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryModelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryModelRequest) ProtoMessage() {}

func (x *QueryModelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_model_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryModelRequest.ProtoReflect.Descriptor instead.
func (*QueryModelRequest) Descriptor() ([]byte, []int) {
	return file_model_service_proto_rawDescGZIP(), []int{8}
}

func (x *QueryModelRequest) GetServiceId() string {
	if x != nil {
		return x.ServiceId
	}
	return ""
}

func (x *QueryModelRequest) GetTableName() string {
	if x != nil {
		return x.TableName
	}
	return ""
}

func (x *QueryModelRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *QueryModelRequest) GetBeginIndex() int32 {
	if x != nil {
		return x.BeginIndex
	}
	return 0
}

func (x *QueryModelRequest) GetEndIndex() int32 {
	if x != nil {
		return x.EndIndex
	}
	return 0
}

func (x *QueryModelRequest) GetQueryType() int32 {
	if x != nil {
		return x.QueryType
	}
	return 0
}

type ModelBindInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ModelBindInfo) Reset() {
	*x = ModelBindInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModelBindInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModelBindInfo) ProtoMessage() {}

func (x *ModelBindInfo) ProtoReflect() protoreflect.Message {
	mi := &file_model_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModelBindInfo.ProtoReflect.Descriptor instead.
func (*ModelBindInfo) Descriptor() ([]byte, []int) {
	return file_model_service_proto_rawDescGZIP(), []int{9}
}

type PipelineNode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name   string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Params string `protobuf:"bytes,2,opt,name=params,proto3" json:"params,omitempty"`
}

func (x *PipelineNode) Reset() {
	*x = PipelineNode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PipelineNode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PipelineNode) ProtoMessage() {}

func (x *PipelineNode) ProtoReflect() protoreflect.Message {
	mi := &file_model_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PipelineNode.ProtoReflect.Descriptor instead.
func (*PipelineNode) Descriptor() ([]byte, []int) {
	return file_model_service_proto_rawDescGZIP(), []int{10}
}

func (x *PipelineNode) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PipelineNode) GetParams() string {
	if x != nil {
		return x.Params
	}
	return ""
}

type ModelProcessorExt struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nodes []*PipelineNode `protobuf:"bytes,1,rep,name=nodes,proto3" json:"nodes,omitempty"`
}

func (x *ModelProcessorExt) Reset() {
	*x = ModelProcessorExt{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_service_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModelProcessorExt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModelProcessorExt) ProtoMessage() {}

func (x *ModelProcessorExt) ProtoReflect() protoreflect.Message {
	mi := &file_model_service_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModelProcessorExt.ProtoReflect.Descriptor instead.
func (*ModelProcessorExt) Descriptor() ([]byte, []int) {
	return file_model_service_proto_rawDescGZIP(), []int{11}
}

func (x *ModelProcessorExt) GetNodes() []*PipelineNode {
	if x != nil {
		return x.Nodes
	}
	return nil
}

type ModelInfoEx struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TableName         string             `protobuf:"bytes,1,opt,name=tableName,proto3" json:"tableName,omitempty"`
	Namespace         string             `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	ServiceIds        []string           `protobuf:"bytes,3,rep,name=serviceIds,proto3" json:"serviceIds,omitempty"`
	Content           string             `protobuf:"bytes,4,opt,name=content,proto3" json:"content,omitempty"`
	Index             int32              `protobuf:"varint,5,opt,name=index,proto3" json:"index,omitempty"`
	ModelProcessorExt *ModelProcessorExt `protobuf:"bytes,6,opt,name=modelProcessorExt,proto3" json:"modelProcessorExt,omitempty"`
	ResourceAdress    string             `protobuf:"bytes,7,opt,name=resourceAdress,proto3" json:"resourceAdress,omitempty"`
}

func (x *ModelInfoEx) Reset() {
	*x = ModelInfoEx{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_service_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModelInfoEx) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModelInfoEx) ProtoMessage() {}

func (x *ModelInfoEx) ProtoReflect() protoreflect.Message {
	mi := &file_model_service_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModelInfoEx.ProtoReflect.Descriptor instead.
func (*ModelInfoEx) Descriptor() ([]byte, []int) {
	return file_model_service_proto_rawDescGZIP(), []int{12}
}

func (x *ModelInfoEx) GetTableName() string {
	if x != nil {
		return x.TableName
	}
	return ""
}

func (x *ModelInfoEx) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *ModelInfoEx) GetServiceIds() []string {
	if x != nil {
		return x.ServiceIds
	}
	return nil
}

func (x *ModelInfoEx) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *ModelInfoEx) GetIndex() int32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *ModelInfoEx) GetModelProcessorExt() *ModelProcessorExt {
	if x != nil {
		return x.ModelProcessorExt
	}
	return nil
}

func (x *ModelInfoEx) GetResourceAdress() string {
	if x != nil {
		return x.ResourceAdress
	}
	return ""
}

type QueryModelResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Retcode    int32          `protobuf:"varint,1,opt,name=retcode,proto3" json:"retcode,omitempty"`
	Message    string         `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	ModelInfos []*ModelInfoEx `protobuf:"bytes,3,rep,name=modelInfos,proto3" json:"modelInfos,omitempty"`
}

func (x *QueryModelResponse) Reset() {
	*x = QueryModelResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_service_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryModelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryModelResponse) ProtoMessage() {}

func (x *QueryModelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_model_service_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryModelResponse.ProtoReflect.Descriptor instead.
func (*QueryModelResponse) Descriptor() ([]byte, []int) {
	return file_model_service_proto_rawDescGZIP(), []int{13}
}

func (x *QueryModelResponse) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

func (x *QueryModelResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *QueryModelResponse) GetModelInfos() []*ModelInfoEx {
	if x != nil {
		return x.ModelInfos
	}
	return nil
}

type PublishRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Local     *LocalInfo                `protobuf:"bytes,1,opt,name=local,proto3" json:"local,omitempty"`
	Role      map[string]*Party         `protobuf:"bytes,2,rep,name=role,proto3" json:"role,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Model     map[string]*RoleModelInfo `protobuf:"bytes,3,rep,name=model,proto3" json:"model,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	ServiceId string                    `protobuf:"bytes,4,opt,name=serviceId,proto3" json:"serviceId,omitempty"`
	TableName string                    `protobuf:"bytes,5,opt,name=tableName,proto3" json:"tableName,omitempty"`
	Namespace string                    `protobuf:"bytes,6,opt,name=namespace,proto3" json:"namespace,omitempty"`
	LoadType  string                    `protobuf:"bytes,7,opt,name=loadType,proto3" json:"loadType,omitempty"`
	FilePath  string                    `protobuf:"bytes,8,opt,name=filePath,proto3" json:"filePath,omitempty"`
}

func (x *PublishRequest) Reset() {
	*x = PublishRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_service_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PublishRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublishRequest) ProtoMessage() {}

func (x *PublishRequest) ProtoReflect() protoreflect.Message {
	mi := &file_model_service_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublishRequest.ProtoReflect.Descriptor instead.
func (*PublishRequest) Descriptor() ([]byte, []int) {
	return file_model_service_proto_rawDescGZIP(), []int{14}
}

func (x *PublishRequest) GetLocal() *LocalInfo {
	if x != nil {
		return x.Local
	}
	return nil
}

func (x *PublishRequest) GetRole() map[string]*Party {
	if x != nil {
		return x.Role
	}
	return nil
}

func (x *PublishRequest) GetModel() map[string]*RoleModelInfo {
	if x != nil {
		return x.Model
	}
	return nil
}

func (x *PublishRequest) GetServiceId() string {
	if x != nil {
		return x.ServiceId
	}
	return ""
}

func (x *PublishRequest) GetTableName() string {
	if x != nil {
		return x.TableName
	}
	return ""
}

func (x *PublishRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *PublishRequest) GetLoadType() string {
	if x != nil {
		return x.LoadType
	}
	return ""
}

func (x *PublishRequest) GetFilePath() string {
	if x != nil {
		return x.FilePath
	}
	return ""
}

type PublishResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StatusCode int32  `protobuf:"varint,1,opt,name=statusCode,proto3" json:"statusCode,omitempty"`
	Message    string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Error      string `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
	Data       []byte `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *PublishResponse) Reset() {
	*x = PublishResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_service_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PublishResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublishResponse) ProtoMessage() {}

func (x *PublishResponse) ProtoReflect() protoreflect.Message {
	mi := &file_model_service_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublishResponse.ProtoReflect.Descriptor instead.
func (*PublishResponse) Descriptor() ([]byte, []int) {
	return file_model_service_proto_rawDescGZIP(), []int{15}
}

func (x *PublishResponse) GetStatusCode() int32 {
	if x != nil {
		return x.StatusCode
	}
	return 0
}

func (x *PublishResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *PublishResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *PublishResponse) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type FetchModelRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TableName  string   `protobuf:"bytes,1,opt,name=tableName,proto3" json:"tableName,omitempty"`
	Namespace  string   `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	SourceIp   string   `protobuf:"bytes,3,opt,name=sourceIp,proto3" json:"sourceIp,omitempty"`
	SourcePort int32    `protobuf:"varint,4,opt,name=sourcePort,proto3" json:"sourcePort,omitempty"`
	TargetIp   string   `protobuf:"bytes,5,opt,name=targetIp,proto3" json:"targetIp,omitempty"`
	TargetPort int32    `protobuf:"varint,6,opt,name=targetPort,proto3" json:"targetPort,omitempty"`
	ServiceIds []string `protobuf:"bytes,7,rep,name=serviceIds,proto3" json:"serviceIds,omitempty"`
}

func (x *FetchModelRequest) Reset() {
	*x = FetchModelRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_service_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FetchModelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FetchModelRequest) ProtoMessage() {}

func (x *FetchModelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_model_service_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FetchModelRequest.ProtoReflect.Descriptor instead.
func (*FetchModelRequest) Descriptor() ([]byte, []int) {
	return file_model_service_proto_rawDescGZIP(), []int{16}
}

func (x *FetchModelRequest) GetTableName() string {
	if x != nil {
		return x.TableName
	}
	return ""
}

func (x *FetchModelRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *FetchModelRequest) GetSourceIp() string {
	if x != nil {
		return x.SourceIp
	}
	return ""
}

func (x *FetchModelRequest) GetSourcePort() int32 {
	if x != nil {
		return x.SourcePort
	}
	return 0
}

func (x *FetchModelRequest) GetTargetIp() string {
	if x != nil {
		return x.TargetIp
	}
	return ""
}

func (x *FetchModelRequest) GetTargetPort() int32 {
	if x != nil {
		return x.TargetPort
	}
	return 0
}

func (x *FetchModelRequest) GetServiceIds() []string {
	if x != nil {
		return x.ServiceIds
	}
	return nil
}

type FetchModelResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StatusCode int32  `protobuf:"varint,1,opt,name=statusCode,proto3" json:"statusCode,omitempty"`
	Message    string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *FetchModelResponse) Reset() {
	*x = FetchModelResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_service_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FetchModelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FetchModelResponse) ProtoMessage() {}

func (x *FetchModelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_model_service_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FetchModelResponse.ProtoReflect.Descriptor instead.
func (*FetchModelResponse) Descriptor() ([]byte, []int) {
	return file_model_service_proto_rawDescGZIP(), []int{17}
}

func (x *FetchModelResponse) GetStatusCode() int32 {
	if x != nil {
		return x.StatusCode
	}
	return 0
}

func (x *FetchModelResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ModelTransferRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TableName  string   `protobuf:"bytes,1,opt,name=tableName,proto3" json:"tableName,omitempty"`
	Namespace  string   `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	ServiceIds []string `protobuf:"bytes,3,rep,name=serviceIds,proto3" json:"serviceIds,omitempty"`
}

func (x *ModelTransferRequest) Reset() {
	*x = ModelTransferRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_service_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModelTransferRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModelTransferRequest) ProtoMessage() {}

func (x *ModelTransferRequest) ProtoReflect() protoreflect.Message {
	mi := &file_model_service_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModelTransferRequest.ProtoReflect.Descriptor instead.
func (*ModelTransferRequest) Descriptor() ([]byte, []int) {
	return file_model_service_proto_rawDescGZIP(), []int{18}
}

func (x *ModelTransferRequest) GetTableName() string {
	if x != nil {
		return x.TableName
	}
	return ""
}

func (x *ModelTransferRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *ModelTransferRequest) GetServiceIds() []string {
	if x != nil {
		return x.ServiceIds
	}
	return nil
}

type ModelTransferResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StatusCode int32  `protobuf:"varint,1,opt,name=statusCode,proto3" json:"statusCode,omitempty"`
	Message    string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	ModelData  []byte `protobuf:"bytes,3,opt,name=modelData,proto3" json:"modelData,omitempty"`
	CacheData  []byte `protobuf:"bytes,4,opt,name=cacheData,proto3" json:"cacheData,omitempty"`
}

func (x *ModelTransferResponse) Reset() {
	*x = ModelTransferResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_service_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModelTransferResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModelTransferResponse) ProtoMessage() {}

func (x *ModelTransferResponse) ProtoReflect() protoreflect.Message {
	mi := &file_model_service_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModelTransferResponse.ProtoReflect.Descriptor instead.
func (*ModelTransferResponse) Descriptor() ([]byte, []int) {
	return file_model_service_proto_rawDescGZIP(), []int{19}
}

func (x *ModelTransferResponse) GetStatusCode() int32 {
	if x != nil {
		return x.StatusCode
	}
	return 0
}

func (x *ModelTransferResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ModelTransferResponse) GetModelData() []byte {
	if x != nil {
		return x.ModelData
	}
	return nil
}

func (x *ModelTransferResponse) GetCacheData() []byte {
	if x != nil {
		return x.CacheData
	}
	return nil
}

var File_model_service_proto protoreflect.FileDescriptor

var file_model_service_proto_rawDesc = []byte{
	0x0a, 0x13, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x26, 0x63, 0x6f, 0x6d, 0x2e, 0x77, 0x65, 0x62, 0x61, 0x6e,
	0x6b, 0x2e, 0x61, 0x69, 0x2e, 0x66, 0x61, 0x74, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x6c,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x22, 0x21, 0x0a,
	0x05, 0x50, 0x61, 0x72, 0x74, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x72, 0x74, 0x79, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x70, 0x61, 0x72, 0x74, 0x79, 0x49, 0x64,
	0x22, 0x39, 0x0a, 0x09, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a,
	0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x6f, 0x6c,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x72, 0x74, 0x79, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x70, 0x61, 0x72, 0x74, 0x79, 0x49, 0x64, 0x22, 0x47, 0x0a, 0x09, 0x4d,
	0x6f, 0x64, 0x65, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x61, 0x62, 0x6c,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x61, 0x62,
	0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x22, 0xf4, 0x01, 0x0a, 0x0d, 0x52, 0x6f, 0x6c, 0x65, 0x4d, 0x6f, 0x64,
	0x65, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x6e, 0x0a, 0x0d, 0x72, 0x6f, 0x6c, 0x65, 0x4d, 0x6f,
	0x64, 0x65, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x48, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x77, 0x65, 0x62, 0x61, 0x6e, 0x6b, 0x2e, 0x61, 0x69, 0x2e, 0x66, 0x61,
	0x74, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x6c, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c,
	0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x49, 0x6e,
	0x66, 0x6f, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0d, 0x72, 0x6f, 0x6c, 0x65, 0x4d, 0x6f, 0x64,
	0x65, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x73, 0x0a, 0x12, 0x52, 0x6f, 0x6c, 0x65, 0x4d, 0x6f,
	0x64, 0x65, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x47,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x77, 0x65, 0x62, 0x61, 0x6e, 0x6b, 0x2e, 0x61, 0x69, 0x2e, 0x66, 0x61,
	0x74, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x6c, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x4b, 0x0a, 0x0d, 0x55,
	0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09,
	0x74, 0x61, 0x62, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61,
	0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e,
	0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x22, 0x4a, 0x0a, 0x0e, 0x55, 0x6e, 0x6c, 0x6f,
	0x61, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x22, 0x6b, 0x0a, 0x0d, 0x55, 0x6e, 0x62, 0x69, 0x6e, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x49, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x49, 0x64, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x22, 0x4a, 0x0a, 0x0e, 0x55, 0x6e, 0x62, 0x69, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0xc7, 0x01,
	0x0a, 0x11, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49,
	0x64, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x1e, 0x0a,
	0x0a, 0x62, 0x65, 0x67, 0x69, 0x6e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0a, 0x62, 0x65, 0x67, 0x69, 0x6e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x1a, 0x0a,
	0x08, 0x65, 0x6e, 0x64, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x08, 0x65, 0x6e, 0x64, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x1c, 0x0a, 0x09, 0x71, 0x75, 0x65,
	0x72, 0x79, 0x54, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x71, 0x75,
	0x65, 0x72, 0x79, 0x54, 0x79, 0x70, 0x65, 0x22, 0x0f, 0x0a, 0x0d, 0x4d, 0x6f, 0x64, 0x65, 0x6c,
	0x42, 0x69, 0x6e, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x3a, 0x0a, 0x0c, 0x50, 0x69, 0x70, 0x65,
	0x6c, 0x69, 0x6e, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61,
	0x72, 0x61, 0x6d, 0x73, 0x22, 0x5f, 0x0a, 0x11, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x50, 0x72, 0x6f,
	0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x45, 0x78, 0x74, 0x12, 0x4a, 0x0a, 0x05, 0x6e, 0x6f, 0x64,
	0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x77,
	0x65, 0x62, 0x61, 0x6e, 0x6b, 0x2e, 0x61, 0x69, 0x2e, 0x66, 0x61, 0x74, 0x65, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x6d, 0x6c, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x72, 0x2e, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x05,
	0x6e, 0x6f, 0x64, 0x65, 0x73, 0x22, 0xaa, 0x02, 0x0a, 0x0b, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x49,
	0x6e, 0x66, 0x6f, 0x45, 0x78, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64,
	0x73, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x69,
	0x6e, 0x64, 0x65, 0x78, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65,
	0x78, 0x12, 0x67, 0x0a, 0x11, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73,
	0x73, 0x6f, 0x72, 0x45, 0x78, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x77, 0x65, 0x62, 0x61, 0x6e, 0x6b, 0x2e, 0x61, 0x69, 0x2e, 0x66, 0x61, 0x74,
	0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x6c, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x50, 0x72, 0x6f, 0x63, 0x65,
	0x73, 0x73, 0x6f, 0x72, 0x45, 0x78, 0x74, 0x52, 0x11, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x50, 0x72,
	0x6f, 0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x45, 0x78, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x41, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x41, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x22, 0x9d, 0x01, 0x0a, 0x12, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x6f, 0x64, 0x65,
	0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x74,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x74, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x53, 0x0a,
	0x0a, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x33, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x77, 0x65, 0x62, 0x61, 0x6e, 0x6b, 0x2e, 0x61,
	0x69, 0x2e, 0x66, 0x61, 0x74, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x6c, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c,
	0x49, 0x6e, 0x66, 0x6f, 0x45, 0x78, 0x52, 0x0a, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x49, 0x6e, 0x66,
	0x6f, 0x73, 0x22, 0xf3, 0x04, 0x0a, 0x0e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x47, 0x0a, 0x05, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x77, 0x65, 0x62, 0x61, 0x6e,
	0x6b, 0x2e, 0x61, 0x69, 0x2e, 0x66, 0x61, 0x74, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x6c,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x4c, 0x6f,
	0x63, 0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x12, 0x54,
	0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x40, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x77, 0x65, 0x62, 0x61, 0x6e, 0x6b, 0x2e, 0x61, 0x69, 0x2e, 0x66, 0x61, 0x74,
	0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x6c, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04,
	0x72, 0x6f, 0x6c, 0x65, 0x12, 0x57, 0x0a, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x41, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x77, 0x65, 0x62, 0x61, 0x6e, 0x6b,
	0x2e, 0x61, 0x69, 0x2e, 0x66, 0x61, 0x74, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x6c, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x50, 0x75, 0x62,
	0x6c, 0x69, 0x73, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4d, 0x6f, 0x64, 0x65,
	0x6c, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x1c, 0x0a,
	0x09, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x74,
	0x61, 0x62, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x74, 0x61, 0x62, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d,
	0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61,
	0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x6f, 0x61, 0x64, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x6f, 0x61, 0x64, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x50, 0x61, 0x74, 0x68, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x50, 0x61, 0x74, 0x68, 0x1a,
	0x66, 0x0a, 0x09, 0x52, 0x6f, 0x6c, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x43,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x77, 0x65, 0x62, 0x61, 0x6e, 0x6b, 0x2e, 0x61, 0x69, 0x2e, 0x66, 0x61,
	0x74, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x6c, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x50, 0x61, 0x72, 0x74, 0x79, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x6f, 0x0a, 0x0a, 0x4d, 0x6f, 0x64, 0x65, 0x6c,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x4b, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x77, 0x65, 0x62,
	0x61, 0x6e, 0x6b, 0x2e, 0x61, 0x69, 0x2e, 0x66, 0x61, 0x74, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x6d, 0x6c, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e,
	0x52, 0x6f, 0x6c, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x75, 0x0a, 0x0f, 0x50, 0x75, 0x62, 0x6c,
	0x69, 0x73, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22,
	0xe7, 0x01, 0x0a, 0x11, 0x46, 0x65, 0x74, 0x63, 0x68, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x70, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x70, 0x12, 0x1e, 0x0a,
	0x0a, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x50, 0x6f, 0x72, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0a, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x1a, 0x0a,
	0x08, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x70, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x50, 0x6f, 0x72, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x74,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x73, 0x22, 0x4e, 0x0a, 0x12, 0x46, 0x65, 0x74,
	0x63, 0x68, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x1e, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x72, 0x0a, 0x14, 0x4d, 0x6f, 0x64,
	0x65, 0x6c, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x1e, 0x0a,
	0x0a, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x73, 0x22, 0x8d, 0x01,
	0x0a, 0x15, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x1c, 0x0a, 0x09, 0x63, 0x61, 0x63, 0x68, 0x65, 0x44, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x09, 0x63, 0x61, 0x63, 0x68, 0x65, 0x44, 0x61, 0x74, 0x61, 0x32, 0x9e, 0x08,
	0x0a, 0x0c, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x7e,
	0x0a, 0x0b, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x4c, 0x6f, 0x61, 0x64, 0x12, 0x36, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x77, 0x65, 0x62, 0x61, 0x6e, 0x6b, 0x2e, 0x61, 0x69, 0x2e, 0x66, 0x61,
	0x74, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x6c, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x37, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x77, 0x65, 0x62, 0x61,
	0x6e, 0x6b, 0x2e, 0x61, 0x69, 0x2e, 0x66, 0x61, 0x74, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d,
	0x6c, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x50,
	0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x7e,
	0x0a, 0x0b, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x42, 0x69, 0x6e, 0x64, 0x12, 0x36, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x77, 0x65, 0x62, 0x61, 0x6e, 0x6b, 0x2e, 0x61, 0x69, 0x2e, 0x66, 0x61,
	0x74, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x6c, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x37, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x77, 0x65, 0x62, 0x61,
	0x6e, 0x6b, 0x2e, 0x61, 0x69, 0x2e, 0x66, 0x61, 0x74, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d,
	0x6c, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x50,
	0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x80,
	0x01, 0x0a, 0x0d, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65,
	0x12, 0x36, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x77, 0x65, 0x62, 0x61, 0x6e, 0x6b, 0x2e, 0x61, 0x69,
	0x2e, 0x66, 0x61, 0x74, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x6c, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73,
	0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x37, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x77,
	0x65, 0x62, 0x61, 0x6e, 0x6b, 0x2e, 0x61, 0x69, 0x2e, 0x66, 0x61, 0x74, 0x65, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x6d, 0x6c, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x72, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x83, 0x01, 0x0a, 0x0a, 0x71, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x6f, 0x64, 0x65, 0x6c,
	0x12, 0x39, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x77, 0x65, 0x62, 0x61, 0x6e, 0x6b, 0x2e, 0x61, 0x69,
	0x2e, 0x66, 0x61, 0x74, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x6c, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d,
	0x6f, 0x64, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3a, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x77, 0x65, 0x62, 0x61, 0x6e, 0x6b, 0x2e, 0x61, 0x69, 0x2e, 0x66, 0x61, 0x74, 0x65,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x6c, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x72, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x77, 0x0a, 0x06, 0x75, 0x6e, 0x6c, 0x6f, 0x61,
	0x64, 0x12, 0x35, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x77, 0x65, 0x62, 0x61, 0x6e, 0x6b, 0x2e, 0x61,
	0x69, 0x2e, 0x66, 0x61, 0x74, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x6c, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x55, 0x6e, 0x6c, 0x6f, 0x61,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x36, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x77,
	0x65, 0x62, 0x61, 0x6e, 0x6b, 0x2e, 0x61, 0x69, 0x2e, 0x66, 0x61, 0x74, 0x65, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x6d, 0x6c, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x72, 0x2e, 0x55, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x77, 0x0a, 0x06, 0x75, 0x6e, 0x62, 0x69, 0x6e, 0x64, 0x12, 0x35, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x77, 0x65, 0x62, 0x61, 0x6e, 0x6b, 0x2e, 0x61, 0x69, 0x2e, 0x66, 0x61, 0x74, 0x65, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x6d, 0x6c, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x72, 0x2e, 0x55, 0x6e, 0x62, 0x69, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x36, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x77, 0x65, 0x62, 0x61, 0x6e, 0x6b, 0x2e, 0x61,
	0x69, 0x2e, 0x66, 0x61, 0x74, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x6c, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x55, 0x6e, 0x62, 0x69, 0x6e,
	0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x83, 0x01, 0x0a, 0x0a, 0x66, 0x65,
	0x74, 0x63, 0x68, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x39, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x77,
	0x65, 0x62, 0x61, 0x6e, 0x6b, 0x2e, 0x61, 0x69, 0x2e, 0x66, 0x61, 0x74, 0x65, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x6d, 0x6c, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x72, 0x2e, 0x46, 0x65, 0x74, 0x63, 0x68, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x3a, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x77, 0x65, 0x62, 0x61, 0x6e, 0x6b,
	0x2e, 0x61, 0x69, 0x2e, 0x66, 0x61, 0x74, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x6c, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x46, 0x65, 0x74,
	0x63, 0x68, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x8c, 0x01, 0x0a, 0x0d, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65,
	0x72, 0x12, 0x3c, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x77, 0x65, 0x62, 0x61, 0x6e, 0x6b, 0x2e, 0x61,
	0x69, 0x2e, 0x66, 0x61, 0x74, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x6c, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x3d, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x77, 0x65, 0x62, 0x61, 0x6e, 0x6b, 0x2e, 0x61, 0x69, 0x2e,
	0x66, 0x61, 0x74, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x6c, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x16,
	0x42, 0x11, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x5a, 0x01, 0x2f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_model_service_proto_rawDescOnce sync.Once
	file_model_service_proto_rawDescData = file_model_service_proto_rawDesc
)

func file_model_service_proto_rawDescGZIP() []byte {
	file_model_service_proto_rawDescOnce.Do(func() {
		file_model_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_model_service_proto_rawDescData)
	})
	return file_model_service_proto_rawDescData
}

var file_model_service_proto_msgTypes = make([]protoimpl.MessageInfo, 23)
var file_model_service_proto_goTypes = []interface{}{
	(*Party)(nil),                 // 0: com.webank.ai.fate.api.mlmodel.manager.Party
	(*LocalInfo)(nil),             // 1: com.webank.ai.fate.api.mlmodel.manager.LocalInfo
	(*ModelInfo)(nil),             // 2: com.webank.ai.fate.api.mlmodel.manager.ModelInfo
	(*RoleModelInfo)(nil),         // 3: com.webank.ai.fate.api.mlmodel.manager.RoleModelInfo
	(*UnloadRequest)(nil),         // 4: com.webank.ai.fate.api.mlmodel.manager.UnloadRequest
	(*UnloadResponse)(nil),        // 5: com.webank.ai.fate.api.mlmodel.manager.UnloadResponse
	(*UnbindRequest)(nil),         // 6: com.webank.ai.fate.api.mlmodel.manager.UnbindRequest
	(*UnbindResponse)(nil),        // 7: com.webank.ai.fate.api.mlmodel.manager.UnbindResponse
	(*QueryModelRequest)(nil),     // 8: com.webank.ai.fate.api.mlmodel.manager.QueryModelRequest
	(*ModelBindInfo)(nil),         // 9: com.webank.ai.fate.api.mlmodel.manager.ModelBindInfo
	(*PipelineNode)(nil),          // 10: com.webank.ai.fate.api.mlmodel.manager.PipelineNode
	(*ModelProcessorExt)(nil),     // 11: com.webank.ai.fate.api.mlmodel.manager.ModelProcessorExt
	(*ModelInfoEx)(nil),           // 12: com.webank.ai.fate.api.mlmodel.manager.ModelInfoEx
	(*QueryModelResponse)(nil),    // 13: com.webank.ai.fate.api.mlmodel.manager.QueryModelResponse
	(*PublishRequest)(nil),        // 14: com.webank.ai.fate.api.mlmodel.manager.PublishRequest
	(*PublishResponse)(nil),       // 15: com.webank.ai.fate.api.mlmodel.manager.PublishResponse
	(*FetchModelRequest)(nil),     // 16: com.webank.ai.fate.api.mlmodel.manager.FetchModelRequest
	(*FetchModelResponse)(nil),    // 17: com.webank.ai.fate.api.mlmodel.manager.FetchModelResponse
	(*ModelTransferRequest)(nil),  // 18: com.webank.ai.fate.api.mlmodel.manager.ModelTransferRequest
	(*ModelTransferResponse)(nil), // 19: com.webank.ai.fate.api.mlmodel.manager.ModelTransferResponse
	nil,                           // 20: com.webank.ai.fate.api.mlmodel.manager.RoleModelInfo.RoleModelInfoEntry
	nil,                           // 21: com.webank.ai.fate.api.mlmodel.manager.PublishRequest.RoleEntry
	nil,                           // 22: com.webank.ai.fate.api.mlmodel.manager.PublishRequest.ModelEntry
}
var file_model_service_proto_depIdxs = []int32{
	20, // 0: com.webank.ai.fate.api.mlmodel.manager.RoleModelInfo.roleModelInfo:type_name -> com.webank.ai.fate.api.mlmodel.manager.RoleModelInfo.RoleModelInfoEntry
	10, // 1: com.webank.ai.fate.api.mlmodel.manager.ModelProcessorExt.nodes:type_name -> com.webank.ai.fate.api.mlmodel.manager.PipelineNode
	11, // 2: com.webank.ai.fate.api.mlmodel.manager.ModelInfoEx.modelProcessorExt:type_name -> com.webank.ai.fate.api.mlmodel.manager.ModelProcessorExt
	12, // 3: com.webank.ai.fate.api.mlmodel.manager.QueryModelResponse.modelInfos:type_name -> com.webank.ai.fate.api.mlmodel.manager.ModelInfoEx
	1,  // 4: com.webank.ai.fate.api.mlmodel.manager.PublishRequest.local:type_name -> com.webank.ai.fate.api.mlmodel.manager.LocalInfo
	21, // 5: com.webank.ai.fate.api.mlmodel.manager.PublishRequest.role:type_name -> com.webank.ai.fate.api.mlmodel.manager.PublishRequest.RoleEntry
	22, // 6: com.webank.ai.fate.api.mlmodel.manager.PublishRequest.model:type_name -> com.webank.ai.fate.api.mlmodel.manager.PublishRequest.ModelEntry
	2,  // 7: com.webank.ai.fate.api.mlmodel.manager.RoleModelInfo.RoleModelInfoEntry.value:type_name -> com.webank.ai.fate.api.mlmodel.manager.ModelInfo
	0,  // 8: com.webank.ai.fate.api.mlmodel.manager.PublishRequest.RoleEntry.value:type_name -> com.webank.ai.fate.api.mlmodel.manager.Party
	3,  // 9: com.webank.ai.fate.api.mlmodel.manager.PublishRequest.ModelEntry.value:type_name -> com.webank.ai.fate.api.mlmodel.manager.RoleModelInfo
	14, // 10: com.webank.ai.fate.api.mlmodel.manager.ModelService.publishLoad:input_type -> com.webank.ai.fate.api.mlmodel.manager.PublishRequest
	14, // 11: com.webank.ai.fate.api.mlmodel.manager.ModelService.publishBind:input_type -> com.webank.ai.fate.api.mlmodel.manager.PublishRequest
	14, // 12: com.webank.ai.fate.api.mlmodel.manager.ModelService.publishOnline:input_type -> com.webank.ai.fate.api.mlmodel.manager.PublishRequest
	8,  // 13: com.webank.ai.fate.api.mlmodel.manager.ModelService.queryModel:input_type -> com.webank.ai.fate.api.mlmodel.manager.QueryModelRequest
	4,  // 14: com.webank.ai.fate.api.mlmodel.manager.ModelService.unload:input_type -> com.webank.ai.fate.api.mlmodel.manager.UnloadRequest
	6,  // 15: com.webank.ai.fate.api.mlmodel.manager.ModelService.unbind:input_type -> com.webank.ai.fate.api.mlmodel.manager.UnbindRequest
	16, // 16: com.webank.ai.fate.api.mlmodel.manager.ModelService.fetchModel:input_type -> com.webank.ai.fate.api.mlmodel.manager.FetchModelRequest
	18, // 17: com.webank.ai.fate.api.mlmodel.manager.ModelService.modelTransfer:input_type -> com.webank.ai.fate.api.mlmodel.manager.ModelTransferRequest
	15, // 18: com.webank.ai.fate.api.mlmodel.manager.ModelService.publishLoad:output_type -> com.webank.ai.fate.api.mlmodel.manager.PublishResponse
	15, // 19: com.webank.ai.fate.api.mlmodel.manager.ModelService.publishBind:output_type -> com.webank.ai.fate.api.mlmodel.manager.PublishResponse
	15, // 20: com.webank.ai.fate.api.mlmodel.manager.ModelService.publishOnline:output_type -> com.webank.ai.fate.api.mlmodel.manager.PublishResponse
	13, // 21: com.webank.ai.fate.api.mlmodel.manager.ModelService.queryModel:output_type -> com.webank.ai.fate.api.mlmodel.manager.QueryModelResponse
	5,  // 22: com.webank.ai.fate.api.mlmodel.manager.ModelService.unload:output_type -> com.webank.ai.fate.api.mlmodel.manager.UnloadResponse
	7,  // 23: com.webank.ai.fate.api.mlmodel.manager.ModelService.unbind:output_type -> com.webank.ai.fate.api.mlmodel.manager.UnbindResponse
	17, // 24: com.webank.ai.fate.api.mlmodel.manager.ModelService.fetchModel:output_type -> com.webank.ai.fate.api.mlmodel.manager.FetchModelResponse
	19, // 25: com.webank.ai.fate.api.mlmodel.manager.ModelService.modelTransfer:output_type -> com.webank.ai.fate.api.mlmodel.manager.ModelTransferResponse
	18, // [18:26] is the sub-list for method output_type
	10, // [10:18] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_model_service_proto_init() }
func file_model_service_proto_init() {
	if File_model_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_model_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Party); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LocalInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModelInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoleModelInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnloadRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnloadResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnbindRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnbindResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryModelRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModelBindInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_service_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PipelineNode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_service_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModelProcessorExt); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_service_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModelInfoEx); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_service_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryModelResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_service_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PublishRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_service_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PublishResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_service_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FetchModelRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_service_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FetchModelResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_service_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModelTransferRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_service_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModelTransferResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_model_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   23,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_model_service_proto_goTypes,
		DependencyIndexes: file_model_service_proto_depIdxs,
		MessageInfos:      file_model_service_proto_msgTypes,
	}.Build()
	File_model_service_proto = out.File
	file_model_service_proto_rawDesc = nil
	file_model_service_proto_goTypes = nil
	file_model_service_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ModelServiceClient is the client API for ModelService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ModelServiceClient interface {
	PublishLoad(ctx context.Context, in *PublishRequest, opts ...grpc.CallOption) (*PublishResponse, error)
	PublishBind(ctx context.Context, in *PublishRequest, opts ...grpc.CallOption) (*PublishResponse, error)
	PublishOnline(ctx context.Context, in *PublishRequest, opts ...grpc.CallOption) (*PublishResponse, error)
	QueryModel(ctx context.Context, in *QueryModelRequest, opts ...grpc.CallOption) (*QueryModelResponse, error)
	Unload(ctx context.Context, in *UnloadRequest, opts ...grpc.CallOption) (*UnloadResponse, error)
	Unbind(ctx context.Context, in *UnbindRequest, opts ...grpc.CallOption) (*UnbindResponse, error)
	FetchModel(ctx context.Context, in *FetchModelRequest, opts ...grpc.CallOption) (*FetchModelResponse, error)
	ModelTransfer(ctx context.Context, in *ModelTransferRequest, opts ...grpc.CallOption) (*ModelTransferResponse, error)
}

type modelServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewModelServiceClient(cc grpc.ClientConnInterface) ModelServiceClient {
	return &modelServiceClient{cc}
}

func (c *modelServiceClient) PublishLoad(ctx context.Context, in *PublishRequest, opts ...grpc.CallOption) (*PublishResponse, error) {
	out := new(PublishResponse)
	err := c.cc.Invoke(ctx, "/com.webank.ai.fate.api.mlmodel.manager.ModelService/publishLoad", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *modelServiceClient) PublishBind(ctx context.Context, in *PublishRequest, opts ...grpc.CallOption) (*PublishResponse, error) {
	out := new(PublishResponse)
	err := c.cc.Invoke(ctx, "/com.webank.ai.fate.api.mlmodel.manager.ModelService/publishBind", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *modelServiceClient) PublishOnline(ctx context.Context, in *PublishRequest, opts ...grpc.CallOption) (*PublishResponse, error) {
	out := new(PublishResponse)
	err := c.cc.Invoke(ctx, "/com.webank.ai.fate.api.mlmodel.manager.ModelService/publishOnline", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *modelServiceClient) QueryModel(ctx context.Context, in *QueryModelRequest, opts ...grpc.CallOption) (*QueryModelResponse, error) {
	out := new(QueryModelResponse)
	err := c.cc.Invoke(ctx, "/com.webank.ai.fate.api.mlmodel.manager.ModelService/queryModel", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *modelServiceClient) Unload(ctx context.Context, in *UnloadRequest, opts ...grpc.CallOption) (*UnloadResponse, error) {
	out := new(UnloadResponse)
	err := c.cc.Invoke(ctx, "/com.webank.ai.fate.api.mlmodel.manager.ModelService/unload", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *modelServiceClient) Unbind(ctx context.Context, in *UnbindRequest, opts ...grpc.CallOption) (*UnbindResponse, error) {
	out := new(UnbindResponse)
	err := c.cc.Invoke(ctx, "/com.webank.ai.fate.api.mlmodel.manager.ModelService/unbind", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *modelServiceClient) FetchModel(ctx context.Context, in *FetchModelRequest, opts ...grpc.CallOption) (*FetchModelResponse, error) {
	out := new(FetchModelResponse)
	err := c.cc.Invoke(ctx, "/com.webank.ai.fate.api.mlmodel.manager.ModelService/fetchModel", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *modelServiceClient) ModelTransfer(ctx context.Context, in *ModelTransferRequest, opts ...grpc.CallOption) (*ModelTransferResponse, error) {
	out := new(ModelTransferResponse)
	err := c.cc.Invoke(ctx, "/com.webank.ai.fate.api.mlmodel.manager.ModelService/modelTransfer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ModelServiceServer is the server API for ModelService service.
type ModelServiceServer interface {
	PublishLoad(context.Context, *PublishRequest) (*PublishResponse, error)
	PublishBind(context.Context, *PublishRequest) (*PublishResponse, error)
	PublishOnline(context.Context, *PublishRequest) (*PublishResponse, error)
	QueryModel(context.Context, *QueryModelRequest) (*QueryModelResponse, error)
	Unload(context.Context, *UnloadRequest) (*UnloadResponse, error)
	Unbind(context.Context, *UnbindRequest) (*UnbindResponse, error)
	FetchModel(context.Context, *FetchModelRequest) (*FetchModelResponse, error)
	ModelTransfer(context.Context, *ModelTransferRequest) (*ModelTransferResponse, error)
}

// UnimplementedModelServiceServer can be embedded to have forward compatible implementations.
type UnimplementedModelServiceServer struct {
}

func (*UnimplementedModelServiceServer) PublishLoad(context.Context, *PublishRequest) (*PublishResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PublishLoad not implemented")
}
func (*UnimplementedModelServiceServer) PublishBind(context.Context, *PublishRequest) (*PublishResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PublishBind not implemented")
}
func (*UnimplementedModelServiceServer) PublishOnline(context.Context, *PublishRequest) (*PublishResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PublishOnline not implemented")
}
func (*UnimplementedModelServiceServer) QueryModel(context.Context, *QueryModelRequest) (*QueryModelResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method QueryModel not implemented")
}
func (*UnimplementedModelServiceServer) Unload(context.Context, *UnloadRequest) (*UnloadResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Unload not implemented")
}
func (*UnimplementedModelServiceServer) Unbind(context.Context, *UnbindRequest) (*UnbindResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Unbind not implemented")
}
func (*UnimplementedModelServiceServer) FetchModel(context.Context, *FetchModelRequest) (*FetchModelResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FetchModel not implemented")
}
func (*UnimplementedModelServiceServer) ModelTransfer(context.Context, *ModelTransferRequest) (*ModelTransferResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ModelTransfer not implemented")
}

func RegisterModelServiceServer(s *grpc.Server, srv ModelServiceServer) {
	s.RegisterService(&_ModelService_serviceDesc, srv)
}

func _ModelService_PublishLoad_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PublishRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ModelServiceServer).PublishLoad(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/com.webank.ai.fate.api.mlmodel.manager.ModelService/PublishLoad",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ModelServiceServer).PublishLoad(ctx, req.(*PublishRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ModelService_PublishBind_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PublishRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ModelServiceServer).PublishBind(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/com.webank.ai.fate.api.mlmodel.manager.ModelService/PublishBind",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ModelServiceServer).PublishBind(ctx, req.(*PublishRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ModelService_PublishOnline_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PublishRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ModelServiceServer).PublishOnline(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/com.webank.ai.fate.api.mlmodel.manager.ModelService/PublishOnline",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ModelServiceServer).PublishOnline(ctx, req.(*PublishRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ModelService_QueryModel_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryModelRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ModelServiceServer).QueryModel(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/com.webank.ai.fate.api.mlmodel.manager.ModelService/QueryModel",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ModelServiceServer).QueryModel(ctx, req.(*QueryModelRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ModelService_Unload_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UnloadRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ModelServiceServer).Unload(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/com.webank.ai.fate.api.mlmodel.manager.ModelService/Unload",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ModelServiceServer).Unload(ctx, req.(*UnloadRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ModelService_Unbind_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UnbindRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ModelServiceServer).Unbind(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/com.webank.ai.fate.api.mlmodel.manager.ModelService/Unbind",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ModelServiceServer).Unbind(ctx, req.(*UnbindRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ModelService_FetchModel_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FetchModelRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ModelServiceServer).FetchModel(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/com.webank.ai.fate.api.mlmodel.manager.ModelService/FetchModel",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ModelServiceServer).FetchModel(ctx, req.(*FetchModelRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ModelService_ModelTransfer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ModelTransferRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ModelServiceServer).ModelTransfer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/com.webank.ai.fate.api.mlmodel.manager.ModelService/ModelTransfer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ModelServiceServer).ModelTransfer(ctx, req.(*ModelTransferRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ModelService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "com.webank.ai.fate.api.mlmodel.manager.ModelService",
	HandlerType: (*ModelServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "publishLoad",
			Handler:    _ModelService_PublishLoad_Handler,
		},
		{
			MethodName: "publishBind",
			Handler:    _ModelService_PublishBind_Handler,
		},
		{
			MethodName: "publishOnline",
			Handler:    _ModelService_PublishOnline_Handler,
		},
		{
			MethodName: "queryModel",
			Handler:    _ModelService_QueryModel_Handler,
		},
		{
			MethodName: "unload",
			Handler:    _ModelService_Unload_Handler,
		},
		{
			MethodName: "unbind",
			Handler:    _ModelService_Unbind_Handler,
		},
		{
			MethodName: "fetchModel",
			Handler:    _ModelService_FetchModel_Handler,
		},
		{
			MethodName: "modelTransfer",
			Handler:    _ModelService_ModelTransfer_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "model_service.proto",
}
