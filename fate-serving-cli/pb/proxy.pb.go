// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proxy.proto

package pb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// returned by service heartbeat to decide next operation
type Operation int32

const (
	Operation_START    Operation = 0
	Operation_RUN      Operation = 1
	Operation_STOP     Operation = 2
	Operation_KILL     Operation = 3
	Operation_GET_DATA Operation = 4
	Operation_PUT_DATA Operation = 5
)

var Operation_name = map[int32]string{
	0: "START",
	1: "RUN",
	2: "STOP",
	3: "KILL",
	4: "GET_DATA",
	5: "PUT_DATA",
}

var Operation_value = map[string]int32{
	"START":    0,
	"RUN":      1,
	"STOP":     2,
	"KILL":     3,
	"GET_DATA": 4,
	"PUT_DATA": 5,
}

func (x Operation) String() string {
	return proto.EnumName(Operation_name, int32(x))
}

func (Operation) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_700b50b08ed8dbaf, []int{0}
}

// metadata of event
type Model struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	DataKey              string   `protobuf:"bytes,2,opt,name=dataKey,proto3" json:"dataKey,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Model) Reset()         { *m = Model{} }
func (m *Model) String() string { return proto.CompactTextString(m) }
func (*Model) ProtoMessage()    {}
func (*Model) Descriptor() ([]byte, []int) {
	return fileDescriptor_700b50b08ed8dbaf, []int{0}
}

func (m *Model) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Model.Unmarshal(m, b)
}
func (m *Model) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Model.Marshal(b, m, deterministic)
}
func (m *Model) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Model.Merge(m, src)
}
func (m *Model) XXX_Size() int {
	return xxx_messageInfo_Model.Size(m)
}
func (m *Model) XXX_DiscardUnknown() {
	xxx_messageInfo_Model.DiscardUnknown(m)
}

var xxx_messageInfo_Model proto.InternalMessageInfo

func (m *Model) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Model) GetDataKey() string {
	if m != nil {
		return m.DataKey
	}
	return ""
}

// metadata of task
type Task struct {
	TaskId               string   `protobuf:"bytes,1,opt,name=taskId,proto3" json:"taskId,omitempty"`
	Model                *Model   `protobuf:"bytes,2,opt,name=model,proto3" json:"model,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Task) Reset()         { *m = Task{} }
func (m *Task) String() string { return proto.CompactTextString(m) }
func (*Task) ProtoMessage()    {}
func (*Task) Descriptor() ([]byte, []int) {
	return fileDescriptor_700b50b08ed8dbaf, []int{1}
}

func (m *Task) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Task.Unmarshal(m, b)
}
func (m *Task) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Task.Marshal(b, m, deterministic)
}
func (m *Task) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Task.Merge(m, src)
}
func (m *Task) XXX_Size() int {
	return xxx_messageInfo_Task.Size(m)
}
func (m *Task) XXX_DiscardUnknown() {
	xxx_messageInfo_Task.DiscardUnknown(m)
}

var xxx_messageInfo_Task proto.InternalMessageInfo

func (m *Task) GetTaskId() string {
	if m != nil {
		return m.TaskId
	}
	return ""
}

func (m *Task) GetModel() *Model {
	if m != nil {
		return m.Model
	}
	return nil
}

type Endpoint struct {
	Ip                   string   `protobuf:"bytes,1,opt,name=ip,proto3" json:"ip,omitempty"`
	Port                 int32    `protobuf:"varint,2,opt,name=port,proto3" json:"port,omitempty"`
	Hostname             string   `protobuf:"bytes,3,opt,name=hostname,proto3" json:"hostname,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Endpoint) Reset()         { *m = Endpoint{} }
func (m *Endpoint) String() string { return proto.CompactTextString(m) }
func (*Endpoint) ProtoMessage()    {}
func (*Endpoint) Descriptor() ([]byte, []int) {
	return fileDescriptor_700b50b08ed8dbaf, []int{2}
}

func (m *Endpoint) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Endpoint.Unmarshal(m, b)
}
func (m *Endpoint) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Endpoint.Marshal(b, m, deterministic)
}
func (m *Endpoint) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Endpoint.Merge(m, src)
}
func (m *Endpoint) XXX_Size() int {
	return xxx_messageInfo_Endpoint.Size(m)
}
func (m *Endpoint) XXX_DiscardUnknown() {
	xxx_messageInfo_Endpoint.DiscardUnknown(m)
}

var xxx_messageInfo_Endpoint proto.InternalMessageInfo

func (m *Endpoint) GetIp() string {
	if m != nil {
		return m.Ip
	}
	return ""
}

func (m *Endpoint) GetPort() int32 {
	if m != nil {
		return m.Port
	}
	return 0
}

func (m *Endpoint) GetHostname() string {
	if m != nil {
		return m.Hostname
	}
	return ""
}

type Topic struct {
	Name                 string    `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	PartyId              string    `protobuf:"bytes,2,opt,name=partyId,proto3" json:"partyId,omitempty"`
	Role                 string    `protobuf:"bytes,3,opt,name=role,proto3" json:"role,omitempty"`
	Callback             *Endpoint `protobuf:"bytes,4,opt,name=callback,proto3" json:"callback,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *Topic) Reset()         { *m = Topic{} }
func (m *Topic) String() string { return proto.CompactTextString(m) }
func (*Topic) ProtoMessage()    {}
func (*Topic) Descriptor() ([]byte, []int) {
	return fileDescriptor_700b50b08ed8dbaf, []int{3}
}

func (m *Topic) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Topic.Unmarshal(m, b)
}
func (m *Topic) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Topic.Marshal(b, m, deterministic)
}
func (m *Topic) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Topic.Merge(m, src)
}
func (m *Topic) XXX_Size() int {
	return xxx_messageInfo_Topic.Size(m)
}
func (m *Topic) XXX_DiscardUnknown() {
	xxx_messageInfo_Topic.DiscardUnknown(m)
}

var xxx_messageInfo_Topic proto.InternalMessageInfo

func (m *Topic) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Topic) GetPartyId() string {
	if m != nil {
		return m.PartyId
	}
	return ""
}

func (m *Topic) GetRole() string {
	if m != nil {
		return m.Role
	}
	return ""
}

func (m *Topic) GetCallback() *Endpoint {
	if m != nil {
		return m.Callback
	}
	return nil
}

// task admin command
type Command struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Command) Reset()         { *m = Command{} }
func (m *Command) String() string { return proto.CompactTextString(m) }
func (*Command) ProtoMessage()    {}
func (*Command) Descriptor() ([]byte, []int) {
	return fileDescriptor_700b50b08ed8dbaf, []int{4}
}

func (m *Command) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Command.Unmarshal(m, b)
}
func (m *Command) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Command.Marshal(b, m, deterministic)
}
func (m *Command) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Command.Merge(m, src)
}
func (m *Command) XXX_Size() int {
	return xxx_messageInfo_Command.Size(m)
}
func (m *Command) XXX_DiscardUnknown() {
	xxx_messageInfo_Command.DiscardUnknown(m)
}

var xxx_messageInfo_Command proto.InternalMessageInfo

func (m *Command) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type Conf struct {
	OverallTimeout        int64    `protobuf:"varint,1,opt,name=overallTimeout,proto3" json:"overallTimeout,omitempty"`
	CompletionWaitTimeout int64    `protobuf:"varint,2,opt,name=completionWaitTimeout,proto3" json:"completionWaitTimeout,omitempty"`
	PacketIntervalTimeout int64    `protobuf:"varint,3,opt,name=packetIntervalTimeout,proto3" json:"packetIntervalTimeout,omitempty"`
	MaxRetries            int32    `protobuf:"varint,4,opt,name=maxRetries,proto3" json:"maxRetries,omitempty"`
	XXX_NoUnkeyedLiteral  struct{} `json:"-"`
	XXX_unrecognized      []byte   `json:"-"`
	XXX_sizecache         int32    `json:"-"`
}

func (m *Conf) Reset()         { *m = Conf{} }
func (m *Conf) String() string { return proto.CompactTextString(m) }
func (*Conf) ProtoMessage()    {}
func (*Conf) Descriptor() ([]byte, []int) {
	return fileDescriptor_700b50b08ed8dbaf, []int{5}
}

func (m *Conf) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Conf.Unmarshal(m, b)
}
func (m *Conf) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Conf.Marshal(b, m, deterministic)
}
func (m *Conf) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Conf.Merge(m, src)
}
func (m *Conf) XXX_Size() int {
	return xxx_messageInfo_Conf.Size(m)
}
func (m *Conf) XXX_DiscardUnknown() {
	xxx_messageInfo_Conf.DiscardUnknown(m)
}

var xxx_messageInfo_Conf proto.InternalMessageInfo

func (m *Conf) GetOverallTimeout() int64 {
	if m != nil {
		return m.OverallTimeout
	}
	return 0
}

func (m *Conf) GetCompletionWaitTimeout() int64 {
	if m != nil {
		return m.CompletionWaitTimeout
	}
	return 0
}

func (m *Conf) GetPacketIntervalTimeout() int64 {
	if m != nil {
		return m.PacketIntervalTimeout
	}
	return 0
}

func (m *Conf) GetMaxRetries() int32 {
	if m != nil {
		return m.MaxRetries
	}
	return 0
}

// metadata used for network data transfer
type Metadata struct {
	Task                 *Task    `protobuf:"bytes,1,opt,name=task,proto3" json:"task,omitempty"`
	Src                  *Topic   `protobuf:"bytes,2,opt,name=src,proto3" json:"src,omitempty"`
	Dst                  *Topic   `protobuf:"bytes,3,opt,name=dst,proto3" json:"dst,omitempty"`
	Command              *Command `protobuf:"bytes,4,opt,name=command,proto3" json:"command,omitempty"`
	Operator             string   `protobuf:"bytes,5,opt,name=operator,proto3" json:"operator,omitempty"`
	Seq                  int64    `protobuf:"varint,6,opt,name=seq,proto3" json:"seq,omitempty"`
	Ack                  int64    `protobuf:"varint,7,opt,name=ack,proto3" json:"ack,omitempty"`
	Conf                 *Conf    `protobuf:"bytes,8,opt,name=conf,proto3" json:"conf,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Metadata) Reset()         { *m = Metadata{} }
func (m *Metadata) String() string { return proto.CompactTextString(m) }
func (*Metadata) ProtoMessage()    {}
func (*Metadata) Descriptor() ([]byte, []int) {
	return fileDescriptor_700b50b08ed8dbaf, []int{6}
}

func (m *Metadata) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Metadata.Unmarshal(m, b)
}
func (m *Metadata) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Metadata.Marshal(b, m, deterministic)
}
func (m *Metadata) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Metadata.Merge(m, src)
}
func (m *Metadata) XXX_Size() int {
	return xxx_messageInfo_Metadata.Size(m)
}
func (m *Metadata) XXX_DiscardUnknown() {
	xxx_messageInfo_Metadata.DiscardUnknown(m)
}

var xxx_messageInfo_Metadata proto.InternalMessageInfo

func (m *Metadata) GetTask() *Task {
	if m != nil {
		return m.Task
	}
	return nil
}

func (m *Metadata) GetSrc() *Topic {
	if m != nil {
		return m.Src
	}
	return nil
}

func (m *Metadata) GetDst() *Topic {
	if m != nil {
		return m.Dst
	}
	return nil
}

func (m *Metadata) GetCommand() *Command {
	if m != nil {
		return m.Command
	}
	return nil
}

func (m *Metadata) GetOperator() string {
	if m != nil {
		return m.Operator
	}
	return ""
}

func (m *Metadata) GetSeq() int64 {
	if m != nil {
		return m.Seq
	}
	return 0
}

func (m *Metadata) GetAck() int64 {
	if m != nil {
		return m.Ack
	}
	return 0
}

func (m *Metadata) GetConf() *Conf {
	if m != nil {
		return m.Conf
	}
	return nil
}

// includes key and value field, supporting sequential and random data transfer
type Data struct {
	Key                  string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value                []byte   `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Data) Reset()         { *m = Data{} }
func (m *Data) String() string { return proto.CompactTextString(m) }
func (*Data) ProtoMessage()    {}
func (*Data) Descriptor() ([]byte, []int) {
	return fileDescriptor_700b50b08ed8dbaf, []int{7}
}

func (m *Data) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Data.Unmarshal(m, b)
}
func (m *Data) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Data.Marshal(b, m, deterministic)
}
func (m *Data) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Data.Merge(m, src)
}
func (m *Data) XXX_Size() int {
	return xxx_messageInfo_Data.Size(m)
}
func (m *Data) XXX_DiscardUnknown() {
	xxx_messageInfo_Data.DiscardUnknown(m)
}

var xxx_messageInfo_Data proto.InternalMessageInfo

func (m *Data) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *Data) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

// data streaming packet
type Packet struct {
	Header               *Metadata `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	Body                 *Data     `protobuf:"bytes,2,opt,name=body,proto3" json:"body,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *Packet) Reset()         { *m = Packet{} }
func (m *Packet) String() string { return proto.CompactTextString(m) }
func (*Packet) ProtoMessage()    {}
func (*Packet) Descriptor() ([]byte, []int) {
	return fileDescriptor_700b50b08ed8dbaf, []int{8}
}

func (m *Packet) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Packet.Unmarshal(m, b)
}
func (m *Packet) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Packet.Marshal(b, m, deterministic)
}
func (m *Packet) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Packet.Merge(m, src)
}
func (m *Packet) XXX_Size() int {
	return xxx_messageInfo_Packet.Size(m)
}
func (m *Packet) XXX_DiscardUnknown() {
	xxx_messageInfo_Packet.DiscardUnknown(m)
}

var xxx_messageInfo_Packet proto.InternalMessageInfo

func (m *Packet) GetHeader() *Metadata {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *Packet) GetBody() *Data {
	if m != nil {
		return m.Body
	}
	return nil
}

// response of heartbeat
type HeartbeatResponse struct {
	Header               *Metadata `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	Operation            Operation `protobuf:"varint,2,opt,name=operation,proto3,enum=com.webank.ai.fate.api.networking.proxy.Operation" json:"operation,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *HeartbeatResponse) Reset()         { *m = HeartbeatResponse{} }
func (m *HeartbeatResponse) String() string { return proto.CompactTextString(m) }
func (*HeartbeatResponse) ProtoMessage()    {}
func (*HeartbeatResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_700b50b08ed8dbaf, []int{9}
}

func (m *HeartbeatResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HeartbeatResponse.Unmarshal(m, b)
}
func (m *HeartbeatResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HeartbeatResponse.Marshal(b, m, deterministic)
}
func (m *HeartbeatResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HeartbeatResponse.Merge(m, src)
}
func (m *HeartbeatResponse) XXX_Size() int {
	return xxx_messageInfo_HeartbeatResponse.Size(m)
}
func (m *HeartbeatResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_HeartbeatResponse.DiscardUnknown(m)
}

var xxx_messageInfo_HeartbeatResponse proto.InternalMessageInfo

func (m *HeartbeatResponse) GetHeader() *Metadata {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *HeartbeatResponse) GetOperation() Operation {
	if m != nil {
		return m.Operation
	}
	return Operation_START
}

func init() {
	proto.RegisterEnum("com.webank.ai.fate.api.networking.proxy.Operation", Operation_name, Operation_value)
	proto.RegisterType((*Model)(nil), "com.webank.ai.fate.api.networking.proxy.Model")
	proto.RegisterType((*Task)(nil), "com.webank.ai.fate.api.networking.proxy.Task")
	proto.RegisterType((*Endpoint)(nil), "com.webank.ai.fate.api.networking.proxy.Endpoint")
	proto.RegisterType((*Topic)(nil), "com.webank.ai.fate.api.networking.proxy.Topic")
	proto.RegisterType((*Command)(nil), "com.webank.ai.fate.api.networking.proxy.Command")
	proto.RegisterType((*Conf)(nil), "com.webank.ai.fate.api.networking.proxy.Conf")
	proto.RegisterType((*Metadata)(nil), "com.webank.ai.fate.api.networking.proxy.Metadata")
	proto.RegisterType((*Data)(nil), "com.webank.ai.fate.api.networking.proxy.Data")
	proto.RegisterType((*Packet)(nil), "com.webank.ai.fate.api.networking.proxy.Packet")
	proto.RegisterType((*HeartbeatResponse)(nil), "com.webank.ai.fate.api.networking.proxy.HeartbeatResponse")
}

func init() { proto.RegisterFile("proxy.proto", fileDescriptor_700b50b08ed8dbaf) }

var fileDescriptor_700b50b08ed8dbaf = []byte{
	// 740 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x55, 0xdb, 0x6a, 0xe4, 0x46,
	0x10, 0x8d, 0x46, 0xd2, 0x5c, 0xca, 0xc6, 0x28, 0x9d, 0x0b, 0xc3, 0x40, 0x42, 0x10, 0x24, 0x31,
	0x01, 0x2b, 0xce, 0x24, 0x79, 0xcf, 0x60, 0x9b, 0x64, 0x7c, 0x89, 0x87, 0xb6, 0x4c, 0xde, 0x12,
	0x7a, 0xa4, 0x9a, 0x58, 0x48, 0xea, 0x96, 0x5b, 0x3d, 0x63, 0xcf, 0x8f, 0x84, 0x3c, 0xee, 0x27,
	0xec, 0xf3, 0x7e, 0xcd, 0x7e, 0xca, 0xd2, 0x2d, 0x69, 0x76, 0x59, 0x6c, 0x90, 0x96, 0x7d, 0xab,
	0xaa, 0xa9, 0x53, 0x7d, 0x4e, 0xd5, 0xb1, 0x05, 0x7b, 0x85, 0x14, 0x8f, 0xdb, 0xa0, 0x90, 0x42,
	0x09, 0xf2, 0x7d, 0x24, 0xf2, 0xe0, 0x01, 0x97, 0x8c, 0xa7, 0x01, 0x4b, 0x82, 0x15, 0x53, 0x18,
	0xb0, 0x22, 0x09, 0x38, 0xaa, 0x07, 0x21, 0xd3, 0x84, 0xff, 0x1b, 0x98, 0xf6, 0x89, 0xb7, 0x64,
	0x65, 0x12, 0x1d, 0xe5, 0xa8, 0x58, 0x05, 0xf5, 0x7f, 0x05, 0xf7, 0x4a, 0xc4, 0x98, 0x11, 0x02,
	0x0e, 0x67, 0x39, 0x8e, 0xad, 0x6f, 0xac, 0xc3, 0x11, 0x35, 0x31, 0x19, 0xc3, 0x20, 0x66, 0x8a,
	0x5d, 0xe0, 0x76, 0xdc, 0x33, 0xe5, 0x26, 0xf5, 0x63, 0x70, 0x42, 0x56, 0xa6, 0xe4, 0x4b, 0xe8,
	0x2b, 0x56, 0xa6, 0xf3, 0xb8, 0xc6, 0xd5, 0x19, 0x39, 0x05, 0x37, 0xd7, 0x63, 0x0d, 0x6e, 0x6f,
	0x1a, 0x04, 0x2d, 0x19, 0x06, 0x86, 0x0c, 0xad, 0xc0, 0xfe, 0x39, 0x0c, 0xcf, 0x78, 0x5c, 0x88,
	0x84, 0x2b, 0x72, 0x00, 0xbd, 0xa4, 0xa8, 0x5f, 0xe9, 0x25, 0x85, 0xe6, 0x5b, 0x08, 0xa9, 0xcc,
	0x03, 0x2e, 0x35, 0x31, 0x99, 0xc0, 0xf0, 0x4e, 0x94, 0xca, 0xe8, 0xb0, 0x4d, 0xe7, 0x2e, 0xf7,
	0xff, 0xb7, 0xc0, 0x0d, 0x45, 0x91, 0x44, 0xcf, 0x29, 0x2d, 0x98, 0x54, 0xdb, 0x79, 0xdc, 0x28,
	0xad, 0x53, 0xdd, 0x2d, 0x45, 0xd6, 0xcc, 0x33, 0x31, 0xb9, 0x82, 0x61, 0xc4, 0xb2, 0x6c, 0xc9,
	0xa2, 0x74, 0xec, 0x18, 0x81, 0x3f, 0xb5, 0x16, 0xd8, 0x08, 0xa2, 0xbb, 0x11, 0xfe, 0x57, 0x30,
	0x38, 0x11, 0x79, 0xce, 0x78, 0xfc, 0x14, 0x37, 0xff, 0x95, 0x05, 0xce, 0x89, 0xe0, 0x2b, 0xf2,
	0x1d, 0x1c, 0x88, 0x0d, 0x4a, 0x96, 0x65, 0x61, 0x92, 0xa3, 0x58, 0x2b, 0xd3, 0x66, 0xd3, 0xf7,
	0xaa, 0xe4, 0x17, 0xf8, 0x22, 0x12, 0x79, 0x91, 0xa1, 0x4a, 0x04, 0xff, 0x8b, 0x25, 0xaa, 0x69,
	0xef, 0x99, 0xf6, 0xa7, 0x7f, 0xd4, 0xa8, 0x82, 0x45, 0x29, 0xaa, 0x39, 0x57, 0x28, 0x37, 0x6c,
	0xf7, 0x88, 0x5d, 0xa1, 0x9e, 0xfc, 0x91, 0x7c, 0x0d, 0x90, 0xb3, 0x47, 0x8a, 0x4a, 0x26, 0x58,
	0x9a, 0x65, 0xb8, 0xf4, 0x9d, 0x8a, 0xff, 0xc2, 0x86, 0xe1, 0x15, 0x2a, 0xa6, 0x8d, 0x43, 0x66,
	0xe0, 0x68, 0x7f, 0x18, 0xda, 0x7b, 0xd3, 0xa3, 0xd6, 0x3b, 0xd3, 0x56, 0xa3, 0x06, 0x4a, 0x7e,
	0x03, 0xbb, 0x94, 0x51, 0x67, 0x5b, 0x99, 0xcb, 0x53, 0x0d, 0xd5, 0x13, 0xe2, 0xb2, 0x52, 0xf5,
	0x01, 0x13, 0xe2, 0x52, 0x91, 0x73, 0x18, 0x44, 0xd5, 0xbd, 0xea, 0xeb, 0x1f, 0xb7, 0x9e, 0x52,
	0xdf, 0x99, 0x36, 0x03, 0xb4, 0x65, 0x45, 0x81, 0x92, 0x29, 0x21, 0xc7, 0x6e, 0x65, 0xd9, 0x26,
	0x27, 0x1e, 0xd8, 0x25, 0xde, 0x8f, 0xfb, 0x66, 0xff, 0x3a, 0xd4, 0x15, 0xed, 0xb9, 0x41, 0x55,
	0x61, 0x51, 0xaa, 0x57, 0x1a, 0x09, 0xbe, 0x1a, 0x0f, 0x3b, 0xae, 0x54, 0x1b, 0x8a, 0x1a, 0xa8,
	0x1f, 0x80, 0x73, 0xaa, 0xaf, 0xe3, 0x81, 0x9d, 0xe2, 0xb6, 0xb6, 0x9e, 0x0e, 0xc9, 0xe7, 0xe0,
	0x6e, 0x58, 0xb6, 0x46, 0xb3, 0xee, 0x7d, 0x5a, 0x25, 0xfe, 0x7f, 0x16, 0xf4, 0x17, 0xc6, 0x0c,
	0x64, 0x0e, 0xfd, 0x3b, 0x64, 0x31, 0xca, 0xfa, 0xa4, 0xed, 0xff, 0x0c, 0x1a, 0x4f, 0xd0, 0x7a,
	0x80, 0x16, 0xb2, 0x14, 0xf1, 0xb6, 0xbe, 0x6c, 0x7b, 0x21, 0x9a, 0x3a, 0x35, 0x50, 0xff, 0xa5,
	0x05, 0x9f, 0xfe, 0x81, 0x4c, 0xaa, 0x25, 0x32, 0x45, 0xb1, 0x2c, 0x04, 0x2f, 0xf1, 0x63, 0x72,
	0x5c, 0xc0, 0xa8, 0x3a, 0x4e, 0x22, 0xb8, 0x21, 0x7a, 0x30, 0x9d, 0xb6, 0x9e, 0x76, 0xdd, 0x20,
	0xe9, 0xdb, 0x21, 0x3f, 0x5c, 0xc3, 0x68, 0x57, 0x27, 0x23, 0x70, 0x6f, 0xc2, 0x19, 0x0d, 0xbd,
	0x4f, 0xc8, 0x00, 0x6c, 0x7a, 0xfb, 0xa7, 0x67, 0x91, 0x21, 0x38, 0x37, 0xe1, 0xf5, 0xc2, 0xeb,
	0xe9, 0xe8, 0x62, 0x7e, 0x79, 0xe9, 0xd9, 0x64, 0x1f, 0x86, 0xbf, 0x9f, 0x85, 0xff, 0x9c, 0xce,
	0xc2, 0x99, 0xe7, 0xe8, 0x6c, 0x71, 0x5b, 0x67, 0xee, 0xf4, 0x75, 0x0f, 0x3e, 0xd3, 0x2b, 0x09,
	0x25, 0xe3, 0xe5, 0x0a, 0xe5, 0x0d, 0xca, 0x4d, 0x12, 0x21, 0xc9, 0xc0, 0x29, 0xd6, 0xe5, 0x1d,
	0xf9, 0xb1, 0x35, 0xdf, 0xea, 0xc4, 0x93, 0xee, 0xeb, 0x3a, 0xb4, 0xaa, 0xd7, 0xb2, 0x8c, 0x74,
	0x07, 0x4f, 0xba, 0x12, 0x3c, 0xb6, 0x48, 0x0e, 0xa3, 0x35, 0x67, 0x72, 0x7b, 0xc2, 0xb2, 0xac,
	0xbb, 0xc0, 0xae, 0x80, 0x29, 0x87, 0x7d, 0x2a, 0xd6, 0x0a, 0x9b, 0xd5, 0xfe, 0x0d, 0xee, 0xfd,
	0x1a, 0xe5, 0x96, 0x74, 0xfc, 0x67, 0x32, 0xf9, 0xf6, 0xb9, 0xfe, 0x48, 0x48, 0xdc, 0x7d, 0x28,
	0x96, 0x7d, 0xf3, 0xa5, 0xfe, 0xf9, 0x4d, 0x00, 0x00, 0x00, 0xff, 0xff, 0x42, 0xc7, 0x09, 0x19,
	0xf3, 0x07, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// DataTransferServiceClient is the client API for DataTransferService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DataTransferServiceClient interface {
	Push(ctx context.Context, opts ...grpc.CallOption) (DataTransferService_PushClient, error)
	Pull(ctx context.Context, in *Metadata, opts ...grpc.CallOption) (DataTransferService_PullClient, error)
	UnaryCall(ctx context.Context, in *Packet, opts ...grpc.CallOption) (*Packet, error)
}

type dataTransferServiceClient struct {
	cc *grpc.ClientConn
}

func NewDataTransferServiceClient(cc *grpc.ClientConn) DataTransferServiceClient {
	return &dataTransferServiceClient{cc}
}

func (c *dataTransferServiceClient) Push(ctx context.Context, opts ...grpc.CallOption) (DataTransferService_PushClient, error) {
	stream, err := c.cc.NewStream(ctx, &_DataTransferService_serviceDesc.Streams[0], "/com.webank.ai.fate.api.networking.proxy.DataTransferService/push", opts...)
	if err != nil {
		return nil, err
	}
	x := &dataTransferServicePushClient{stream}
	return x, nil
}

type DataTransferService_PushClient interface {
	Send(*Packet) error
	CloseAndRecv() (*Metadata, error)
	grpc.ClientStream
}

type dataTransferServicePushClient struct {
	grpc.ClientStream
}

func (x *dataTransferServicePushClient) Send(m *Packet) error {
	return x.ClientStream.SendMsg(m)
}

func (x *dataTransferServicePushClient) CloseAndRecv() (*Metadata, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(Metadata)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *dataTransferServiceClient) Pull(ctx context.Context, in *Metadata, opts ...grpc.CallOption) (DataTransferService_PullClient, error) {
	stream, err := c.cc.NewStream(ctx, &_DataTransferService_serviceDesc.Streams[1], "/com.webank.ai.fate.api.networking.proxy.DataTransferService/pull", opts...)
	if err != nil {
		return nil, err
	}
	x := &dataTransferServicePullClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type DataTransferService_PullClient interface {
	Recv() (*Packet, error)
	grpc.ClientStream
}

type dataTransferServicePullClient struct {
	grpc.ClientStream
}

func (x *dataTransferServicePullClient) Recv() (*Packet, error) {
	m := new(Packet)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *dataTransferServiceClient) UnaryCall(ctx context.Context, in *Packet, opts ...grpc.CallOption) (*Packet, error) {
	out := new(Packet)
	err := c.cc.Invoke(ctx, "/com.webank.ai.fate.api.networking.proxy.DataTransferService/unaryCall", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DataTransferServiceServer is the server API for DataTransferService service.
type DataTransferServiceServer interface {
	Push(DataTransferService_PushServer) error
	Pull(*Metadata, DataTransferService_PullServer) error
	UnaryCall(context.Context, *Packet) (*Packet, error)
}

// UnimplementedDataTransferServiceServer can be embedded to have forward compatible implementations.
type UnimplementedDataTransferServiceServer struct {
}

func (*UnimplementedDataTransferServiceServer) Push(srv DataTransferService_PushServer) error {
	return status.Errorf(codes.Unimplemented, "method Push not implemented")
}
func (*UnimplementedDataTransferServiceServer) Pull(req *Metadata, srv DataTransferService_PullServer) error {
	return status.Errorf(codes.Unimplemented, "method Pull not implemented")
}
func (*UnimplementedDataTransferServiceServer) UnaryCall(ctx context.Context, req *Packet) (*Packet, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UnaryCall not implemented")
}

func RegisterDataTransferServiceServer(s *grpc.Server, srv DataTransferServiceServer) {
	s.RegisterService(&_DataTransferService_serviceDesc, srv)
}

func _DataTransferService_Push_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(DataTransferServiceServer).Push(&dataTransferServicePushServer{stream})
}

type DataTransferService_PushServer interface {
	SendAndClose(*Metadata) error
	Recv() (*Packet, error)
	grpc.ServerStream
}

type dataTransferServicePushServer struct {
	grpc.ServerStream
}

func (x *dataTransferServicePushServer) SendAndClose(m *Metadata) error {
	return x.ServerStream.SendMsg(m)
}

func (x *dataTransferServicePushServer) Recv() (*Packet, error) {
	m := new(Packet)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _DataTransferService_Pull_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(Metadata)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(DataTransferServiceServer).Pull(m, &dataTransferServicePullServer{stream})
}

type DataTransferService_PullServer interface {
	Send(*Packet) error
	grpc.ServerStream
}

type dataTransferServicePullServer struct {
	grpc.ServerStream
}

func (x *dataTransferServicePullServer) Send(m *Packet) error {
	return x.ServerStream.SendMsg(m)
}

func _DataTransferService_UnaryCall_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Packet)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataTransferServiceServer).UnaryCall(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/com.webank.ai.fate.api.networking.proxy.DataTransferService/UnaryCall",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataTransferServiceServer).UnaryCall(ctx, req.(*Packet))
	}
	return interceptor(ctx, in, info, handler)
}

var _DataTransferService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "com.webank.ai.fate.api.networking.proxy.DataTransferService",
	HandlerType: (*DataTransferServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "unaryCall",
			Handler:    _DataTransferService_UnaryCall_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "push",
			Handler:       _DataTransferService_Push_Handler,
			ClientStreams: true,
		},
		{
			StreamName:    "pull",
			Handler:       _DataTransferService_Pull_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "proxy.proto",
}

// RouteServiceClient is the client API for RouteService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RouteServiceClient interface {
	Query(ctx context.Context, in *Topic, opts ...grpc.CallOption) (*Endpoint, error)
}

type routeServiceClient struct {
	cc *grpc.ClientConn
}

func NewRouteServiceClient(cc *grpc.ClientConn) RouteServiceClient {
	return &routeServiceClient{cc}
}

func (c *routeServiceClient) Query(ctx context.Context, in *Topic, opts ...grpc.CallOption) (*Endpoint, error) {
	out := new(Endpoint)
	err := c.cc.Invoke(ctx, "/com.webank.ai.fate.api.networking.proxy.RouteService/query", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RouteServiceServer is the server API for RouteService service.
type RouteServiceServer interface {
	Query(context.Context, *Topic) (*Endpoint, error)
}

// UnimplementedRouteServiceServer can be embedded to have forward compatible implementations.
type UnimplementedRouteServiceServer struct {
}

func (*UnimplementedRouteServiceServer) Query(ctx context.Context, req *Topic) (*Endpoint, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Query not implemented")
}

func RegisterRouteServiceServer(s *grpc.Server, srv RouteServiceServer) {
	s.RegisterService(&_RouteService_serviceDesc, srv)
}

func _RouteService_Query_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Topic)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RouteServiceServer).Query(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/com.webank.ai.fate.api.networking.proxy.RouteService/Query",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RouteServiceServer).Query(ctx, req.(*Topic))
	}
	return interceptor(ctx, in, info, handler)
}

var _RouteService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "com.webank.ai.fate.api.networking.proxy.RouteService",
	HandlerType: (*RouteServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "query",
			Handler:    _RouteService_Query_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proxy.proto",
}
